package com.amazonaws.dynamodb

import smithy4s.Schema
import smithy4s.Hints
import smithy4s.ShapeId
import smithy4s.schema.Schema.struct
import smithy4s.ShapeTag

case class BatchGetItemInput(requestItems: Map[TableName,KeysAndAttributes], returnConsumedCapacity: Option[ReturnConsumedCapacity] = None)
object BatchGetItemInput extends ShapeTag.Companion[BatchGetItemInput] {
  val id: ShapeId = ShapeId("com.amazonaws.dynamodb", "BatchGetItemInput")

  val hints : Hints = Hints(
    smithy.api.Documentation("<p>Represents the input of a <code>BatchGetItem</code> operation.</p>"),
  )

  implicit val schema: Schema[BatchGetItemInput] = struct(
    BatchGetRequestMap.underlyingSchema.required[BatchGetItemInput]("RequestItems", _.requestItems).addHints(smithy.api.Documentation("<p>A map of one or more table names and, for each table, a map that describes one or more\n            items to retrieve from that table. Each table name can be used only once per\n                <code>BatchGetItem</code> request.</p>\n        <p>Each element in the map of items to retrieve consists of the following:</p>\n        <ul>\n            <li>\n                <p>\n                    <code>ConsistentRead</code> - If <code>true</code>, a strongly consistent read\n                    is used; if <code>false</code> (the default), an eventually consistent read is\n                    used.</p>\n            </li>\n            <li>\n                <p>\n                    <code>ExpressionAttributeNames</code> - One or more substitution tokens for\n                    attribute names in the <code>ProjectionExpression</code> parameter. The\n                    following are some use cases for using\n                    <code>ExpressionAttributeNames</code>:</p>\n                <ul>\n                  <li>\n                        <p>To access an attribute whose name conflicts with a DynamoDB reserved\n                            word.</p>\n                    </li>\n                  <li>\n                        <p>To create a placeholder for repeating occurrences of an attribute name\n                            in an expression.</p>\n                    </li>\n                  <li>\n                        <p>To prevent special characters in an attribute name from being\n                            misinterpreted in an expression.</p>\n                    </li>\n               </ul>\n                <p>Use the <b>#</b> character in an expression to\n                    dereference an attribute name. For example, consider the following attribute\n                    name:</p>\n                <ul>\n                  <li>\n                        <p>\n                            <code>Percentile</code>\n                        </p>\n                    </li>\n               </ul>\n                <p>The name of this attribute conflicts with a reserved word, so it cannot be\n                    used directly in an expression. (For the complete list of reserved words, see\n                        <a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ReservedWords.html\">Reserved\n                        Words</a> in the <i>Amazon DynamoDB Developer Guide</i>).\n                    To work around this, you could specify the following for\n                        <code>ExpressionAttributeNames</code>:</p>\n                <ul>\n                  <li>\n                        <p>\n                            <code>{\"#P\":\"Percentile\"}</code>\n                        </p>\n                    </li>\n               </ul>\n                <p>You could then use this substitution in an expression, as in this\n                    example:</p>\n                <ul>\n                  <li>\n                        <p>\n                            <code>#P = :val</code>\n                        </p>\n                    </li>\n               </ul>\n                <note>\n                    <p>Tokens that begin with the <b>:</b> character\n                        are <i>expression attribute values</i>, which are placeholders\n                        for the actual value at runtime.</p>\n                </note>\n                <p>For more information about expression attribute names, see <a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.AccessingItemAttributes.html\">Accessing Item Attributes</a> in the <i>Amazon DynamoDB\n                        Developer Guide</i>.</p>\n            </li>\n            <li>\n                <p>\n                    <code>Keys</code> - An array of primary key attribute values that define\n                    specific items in the table. For each primary key, you must provide\n                        <i>all</i> of the key attributes. For example, with a simple\n                    primary key, you only need to provide the partition key value. For a composite\n                    key, you must provide <i>both</i> the partition key value and the\n                    sort key value.</p>\n            </li>\n            <li>\n                <p>\n                    <code>ProjectionExpression</code> - A string that identifies one or more\n                    attributes to retrieve from the table. These attributes can include scalars,\n                    sets, or elements of a JSON document. The attributes in the expression must be\n                    separated by commas.</p>\n                <p>If no attribute names are specified, then all attributes are returned. If any\n                    of the requested attributes are not found, they do not appear in the\n                    result.</p>\n                <p>For more information, see <a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.AccessingItemAttributes.html\">Accessing Item Attributes</a> in the <i>Amazon DynamoDB\n                        Developer Guide</i>.</p>\n            </li>\n            <li>\n                <p>\n                    <code>AttributesToGet</code> - This is a legacy parameter. Use\n                        <code>ProjectionExpression</code> instead. For more information, see <a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/LegacyConditionalParameters.AttributesToGet.html\">AttributesToGet</a> in the <i>Amazon DynamoDB Developer\n                        Guide</i>. </p>\n\n            </li>\n         </ul>"), smithy.api.Required()),
    ReturnConsumedCapacity.schema.optional[BatchGetItemInput]("ReturnConsumedCapacity", _.returnConsumedCapacity),
  ){
    BatchGetItemInput.apply
  }.withId(id).addHints(hints)
}