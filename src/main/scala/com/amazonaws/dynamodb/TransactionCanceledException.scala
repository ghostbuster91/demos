package com.amazonaws.dynamodb

import smithy4s.Schema
import smithy4s.Hints
import smithy4s.ShapeId
import smithy4s.schema.Schema.struct
import smithy4s.ShapeTag

case class TransactionCanceledException(message: Option[ErrorMessage] = None, cancellationReasons: Option[List[CancellationReason]] = None) extends Throwable {
  override def getMessage(): String = message.map(_.value).orNull
}
object TransactionCanceledException extends ShapeTag.Companion[TransactionCanceledException] {
  val id: ShapeId = ShapeId("com.amazonaws.dynamodb", "TransactionCanceledException")

  val hints : Hints = Hints(
    smithy.api.Documentation("<p>The entire transaction request was canceled.</p>\n        <p>DynamoDB cancels a <code>TransactWriteItems</code> request under the following\n            circumstances:</p>\n        <ul>\n            <li>\n                <p>A condition in one of the condition expressions is not met.</p>\n            </li>\n            <li>\n                <p>A table in the <code>TransactWriteItems</code> request is in a different\n                    account or region.</p>\n            </li>\n            <li>\n                <p>More than one action in the <code>TransactWriteItems</code> operation\n                    targets the same item.</p>\n            </li>\n            <li>\n                <p>There is insufficient provisioned capacity for the transaction to be\n                    completed.</p>\n            </li>\n            <li>\n                <p>An item size becomes too large (larger than 400 KB), or a local secondary\n                    index (LSI) becomes too large, or a similar validation error occurs because of\n                    changes made by the transaction.</p>\n            </li>\n            <li>\n                <p>There is a user error, such as an invalid data format.</p>\n            </li>\n         </ul>\n\n        <p>DynamoDB cancels a <code>TransactGetItems</code> request under the\n            following circumstances:</p>\n        <ul>\n            <li>\n                <p>There is an ongoing <code>TransactGetItems</code> operation that conflicts\n                    with a concurrent <code>PutItem</code>, <code>UpdateItem</code>,\n                        <code>DeleteItem</code> or <code>TransactWriteItems</code> request. In this\n                    case the <code>TransactGetItems</code> operation fails with a\n                        <code>TransactionCanceledException</code>.</p>\n            </li>\n            <li>\n                <p>A table in the <code>TransactGetItems</code> request is in a different\n                    account or region.</p>\n            </li>\n            <li>\n                <p>There is insufficient provisioned capacity for the transaction to be\n                    completed.</p>\n            </li>\n            <li>\n                <p>There is a user error, such as an invalid data format.</p>\n            </li>\n         </ul>\n\n        <note>\n            <p>If using Java, DynamoDB lists the cancellation reasons on the\n                    <code>CancellationReasons</code> property. This property is not set for other\n                languages. Transaction cancellation reasons are ordered in the order of requested\n                items, if an item has no error it will have <code>None</code> code and\n                    <code>Null</code> message.</p>\n        </note>\n        <p>Cancellation reason codes and possible error messages:</p>\n        <ul>\n            <li>\n                <p>No Errors:</p>\n                <ul>\n                  <li>\n                        <p>Code: <code>None</code>\n                        </p>\n                    </li>\n                  <li>\n                        <p>Message: <code>null</code>\n                        </p>\n                    </li>\n               </ul>\n            </li>\n            <li>\n                <p>Conditional Check Failed:</p>\n                <ul>\n                  <li>\n                        <p>Code: <code>ConditionalCheckFailed</code>\n                        </p>\n                    </li>\n                  <li>\n                        <p>Message: The conditional request failed. </p>\n                    </li>\n               </ul>\n            </li>\n            <li>\n                <p>Item Collection Size Limit Exceeded:</p>\n                <ul>\n                  <li>\n                        <p>Code: <code>ItemCollectionSizeLimitExceeded</code>\n                        </p>\n                    </li>\n                  <li>\n                        <p>Message: Collection size exceeded.</p>\n                    </li>\n               </ul>\n            </li>\n            <li>\n                <p>Transaction Conflict:</p>\n                <ul>\n                  <li>\n                        <p>Code: <code>TransactionConflict</code>\n                        </p>\n                    </li>\n                  <li>\n                        <p>Message: Transaction is ongoing for the item.</p>\n                    </li>\n               </ul>\n            </li>\n            <li>\n                <p>Provisioned Throughput Exceeded:</p>\n                <ul>\n                  <li>\n                        <p>Code: <code>ProvisionedThroughputExceeded</code>\n                        </p>\n                    </li>\n                  <li>\n                        <p>Messages:</p>\n                        <ul>\n                        <li>\n                                <p>The level of configured provisioned throughput for the\n                                    table was exceeded. Consider increasing your provisioning level\n                                    with the UpdateTable API.</p>\n                                <note>\n                                    <p>This Message is received when provisioned throughput is\n                                        exceeded is on a provisioned DynamoDB\n                                        table.</p>\n                                </note>\n                            </li>\n                        <li>\n                                <p>The level of configured provisioned throughput for one or\n                                    more global secondary indexes of the table was exceeded.\n                                    Consider increasing your provisioning level for the\n                                    under-provisioned global secondary indexes with the UpdateTable\n                                    API.</p>\n                                <note>\n                                    <p>This message is returned when provisioned throughput is\n                                        exceeded is on a provisioned GSI.</p>\n                                </note>\n                            </li>\n                     </ul>\n\n                    </li>\n               </ul>\n            </li>\n            <li>\n                <p>Throttling Error:</p>\n                <ul>\n                  <li>\n                        <p>Code: <code>ThrottlingError</code>\n                        </p>\n                    </li>\n                  <li>\n                        <p>Messages: </p>\n                        <ul>\n                        <li>\n                                <p>Throughput exceeds the current capacity of your table or\n                                    index. DynamoDB is automatically scaling your table or\n                                    index so please try again shortly. If exceptions persist, check\n                                    if you have a hot key:\n                                    https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/bp-partition-key-design.html.</p>\n                                <note>\n                                    <p>This message is returned when writes get throttled on an\n                                        On-Demand table as DynamoDB is automatically\n                                        scaling the table.</p>\n                                </note>\n                            </li>\n                        <li>\n                                <p>Throughput exceeds the current capacity for one or more\n                                    global secondary indexes. DynamoDB is automatically\n                                    scaling your index so please try again shortly.</p>\n                                <note>\n                                    <p>This message is returned when when writes get throttled on\n                                        an On-Demand GSI as DynamoDB is automatically\n                                        scaling the GSI.</p>\n                                </note>\n                            </li>\n                     </ul>\n\n                    </li>\n               </ul>\n            </li>\n            <li>\n                <p>Validation Error:</p>\n                <ul>\n                  <li>\n                        <p>Code: <code>ValidationError</code>\n                        </p>\n                    </li>\n                  <li>\n                        <p>Messages: </p>\n                        <ul>\n                        <li>\n                                <p>One or more parameter values were invalid.</p>\n                            </li>\n                        <li>\n                                <p>The update expression attempted to update the secondary\n                                    index key beyond allowed size limits.</p>\n                            </li>\n                        <li>\n                                <p>The update expression attempted to update the secondary\n                                    index key to unsupported type.</p>\n                            </li>\n                        <li>\n                                <p>An operand in the update expression has an incorrect data\n                                    type.</p>\n                            </li>\n                        <li>\n                                <p>Item size to update has exceeded the maximum allowed\n                                    size.</p>\n                            </li>\n                        <li>\n                                <p>Number overflow. Attempting to store a number with\n                                    magnitude larger than supported range.</p>\n                            </li>\n                        <li>\n                                <p>Type mismatch for attribute to update.</p>\n                            </li>\n                        <li>\n                                <p>Nesting Levels have exceeded supported limits.</p>\n                            </li>\n                        <li>\n                                <p>The document path provided in the update expression is\n                                    invalid for update.</p>\n                            </li>\n                        <li>\n                                <p>The provided expression refers to an attribute that does\n                                    not exist in the item.</p>\n                            </li>\n                     </ul>\n\n                    </li>\n               </ul>\n            </li>\n         </ul>"),
    smithy.api.Error.CLIENT.widen,
  )

  implicit val schema: Schema[TransactionCanceledException] = struct(
    ErrorMessage.schema.optional[TransactionCanceledException]("Message", _.message),
    CancellationReasonList.underlyingSchema.optional[TransactionCanceledException]("CancellationReasons", _.cancellationReasons).addHints(smithy.api.Documentation("<p>A list of cancellation reasons.</p>")),
  ){
    TransactionCanceledException.apply
  }.withId(id).addHints(hints)
}