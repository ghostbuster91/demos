package com.amazonaws.dynamodb

import smithy4s.Schema
import smithy4s.Hints
import smithy4s.schema.Schema.string
import smithy4s.ShapeId
import smithy4s.schema.Schema.struct
import smithy4s.ShapeTag
import smithy4s.schema.Schema.long

case class TableDescription(tableSizeBytes: Long = 0, itemCount: Long = 0, attributeDefinitions: Option[List[AttributeDefinition]] = None, tableName: Option[TableName] = None, keySchema: Option[List[KeySchemaElement]] = None, tableStatus: Option[TableStatus] = None, creationDateTime: Option[Date] = None, provisionedThroughput: Option[ProvisionedThroughputDescription] = None, tableArn: Option[String] = None, tableId: Option[TableId] = None, billingModeSummary: Option[BillingModeSummary] = None, localSecondaryIndexes: Option[List[LocalSecondaryIndexDescription]] = None, globalSecondaryIndexes: Option[List[GlobalSecondaryIndexDescription]] = None, streamSpecification: Option[StreamSpecification] = None, latestStreamLabel: Option[String] = None, latestStreamArn: Option[StreamArn] = None, globalTableVersion: Option[String] = None, replicas: Option[List[ReplicaDescription]] = None, restoreSummary: Option[RestoreSummary] = None, sSEDescription: Option[SSEDescription] = None, archivalSummary: Option[ArchivalSummary] = None, tableClassSummary: Option[TableClassSummary] = None)
object TableDescription extends ShapeTag.Companion[TableDescription] {
  val id: ShapeId = ShapeId("com.amazonaws.dynamodb", "TableDescription")

  val hints : Hints = Hints(
    smithy.api.Documentation("<p>Represents the properties of a table.</p>"),
  )

  implicit val schema: Schema[TableDescription] = struct(
    long.required[TableDescription]("TableSizeBytes", _.tableSizeBytes).addHints(smithy.api.Documentation("<p>The total size of the specified table, in bytes. DynamoDB updates this value\n            approximately every six hours. Recent changes might not be reflected in this\n            value.</p>"), smithy.api.Default(smithy4s.Document.fromDouble(0.0))),
    long.required[TableDescription]("ItemCount", _.itemCount).addHints(smithy.api.Documentation("<p>The number of items in the specified table. DynamoDB updates this value approximately\n            every six hours. Recent changes might not be reflected in this value.</p>"), smithy.api.Default(smithy4s.Document.fromDouble(0.0))),
    AttributeDefinitions.underlyingSchema.optional[TableDescription]("AttributeDefinitions", _.attributeDefinitions).addHints(smithy.api.Documentation("<p>An array of <code>AttributeDefinition</code> objects. Each of these objects describes\n            one attribute in the table and index key schema.</p>\n        <p>Each <code>AttributeDefinition</code> object in this array is composed of:</p>\n        <ul>\n            <li>\n                <p>\n                    <code>AttributeName</code> - The name of the attribute.</p>\n            </li>\n            <li>\n                <p>\n                    <code>AttributeType</code> - The data type for the attribute.</p>\n            </li>\n         </ul>")),
    TableName.schema.optional[TableDescription]("TableName", _.tableName).addHints(smithy.api.Documentation("<p>The name of the table.</p>")),
    KeySchema.underlyingSchema.optional[TableDescription]("KeySchema", _.keySchema).addHints(smithy.api.Documentation("<p>The primary key structure for the table. Each <code>KeySchemaElement</code> consists\n            of:</p>\n        <ul>\n            <li>\n                <p>\n                    <code>AttributeName</code> - The name of the attribute.</p>\n            </li>\n            <li>\n                <p>\n                    <code>KeyType</code> - The role of the attribute:</p>\n                <ul>\n                  <li>\n                        <p>\n                            <code>HASH</code> - partition key</p>\n                    </li>\n                  <li>\n                        <p>\n                            <code>RANGE</code> - sort key</p>\n                    </li>\n               </ul>\n                <note>\n                    <p>The partition key of an item is also known as its <i>hash\n                            attribute</i>. The term \"hash attribute\" derives from DynamoDB\'s\n                        usage of an internal hash function to evenly distribute data items across\n                        partitions, based on their partition key values.</p>\n                    <p>The sort key of an item is also known as its <i>range\n                            attribute</i>. The term \"range attribute\" derives from the way\n                        DynamoDB stores items with the same partition key physically close together,\n                        in sorted order by the sort key value.</p>\n                </note>\n\n            </li>\n         </ul>\n        <p>For more information about primary keys, see <a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DataModel.html#DataModelPrimaryKey\">Primary Key</a> in the <i>Amazon DynamoDB Developer\n            Guide</i>.</p>")),
    TableStatus.schema.optional[TableDescription]("TableStatus", _.tableStatus).addHints(smithy.api.Documentation("<p>The current state of the table:</p>\n        <ul>\n            <li>\n                <p>\n                    <code>CREATING</code> - The table is being created.</p>\n            </li>\n            <li>\n                <p>\n                    <code>UPDATING</code> - The table is being updated.</p>\n            </li>\n            <li>\n                <p>\n                    <code>DELETING</code> - The table is being deleted.</p>\n            </li>\n            <li>\n                <p>\n                    <code>ACTIVE</code> - The table is ready for use.</p>\n            </li>\n            <li>\n                <p>\n                    <code>INACCESSIBLE_ENCRYPTION_CREDENTIALS</code> - The KMS key\n                    used to encrypt the table in inaccessible. Table operations may fail due to\n                    failure to use the KMS key. DynamoDB will initiate the\n                    table archival process when a table\'s KMS key remains\n                    inaccessible for more than seven days. </p>\n            </li>\n            <li>\n                <p>\n                    <code>ARCHIVING</code> - The table is being archived. Operations are not allowed\n                    until archival is complete. </p>\n            </li>\n            <li>\n                <p>\n                    <code>ARCHIVED</code> - The table has been archived. See the ArchivalReason for\n                    more information. </p>\n            </li>\n         </ul>")),
    Date.schema.optional[TableDescription]("CreationDateTime", _.creationDateTime).addHints(smithy.api.Documentation("<p>The date and time when the table was created, in <a href=\"http://www.epochconverter.com/\">UNIX epoch time</a> format.</p>")),
    ProvisionedThroughputDescription.schema.optional[TableDescription]("ProvisionedThroughput", _.provisionedThroughput).addHints(smithy.api.Documentation("<p>The provisioned throughput settings for the table, consisting of read and write\n            capacity units, along with data about increases and decreases.</p>")),
    string.optional[TableDescription]("TableArn", _.tableArn).addHints(smithy.api.Documentation("<p>The Amazon Resource Name (ARN) that uniquely identifies the table.</p>")),
    TableId.schema.optional[TableDescription]("TableId", _.tableId).addHints(smithy.api.Documentation("<p>Unique identifier for the table for which the backup was created. </p>")),
    BillingModeSummary.schema.optional[TableDescription]("BillingModeSummary", _.billingModeSummary).addHints(smithy.api.Documentation("<p>Contains the details for the read/write capacity mode.</p>")),
    LocalSecondaryIndexDescriptionList.underlyingSchema.optional[TableDescription]("LocalSecondaryIndexes", _.localSecondaryIndexes).addHints(smithy.api.Documentation("<p>Represents one or more local secondary indexes on the table. Each index is scoped to a\n            given partition key value. Tables with one or more local secondary indexes are subject\n            to an item collection size limit, where the amount of data within a given item\n            collection cannot exceed 10 GB. Each element is composed of:</p>\n        <ul>\n            <li>\n                <p>\n                    <code>IndexName</code> - The name of the local secondary index.</p>\n            </li>\n            <li>\n                <p>\n                    <code>KeySchema</code> - Specifies the complete index key schema. The attribute\n                    names in the key schema must be between 1 and 255 characters (inclusive). The\n                    key schema must begin with the same partition key as the table.</p>\n            </li>\n            <li>\n                <p>\n                    <code>Projection</code> - Specifies attributes that are copied (projected) from\n                    the table into the index. These are in addition to the primary key attributes\n                    and index key attributes, which are automatically projected. Each attribute\n                    specification is composed of:</p>\n                <ul>\n                  <li>\n                        <p>\n                            <code>ProjectionType</code> - One of the following:</p>\n                        <ul>\n                        <li>\n                                <p>\n                                    <code>KEYS_ONLY</code> - Only the index and primary keys are\n                                    projected into the index.</p>\n                            </li>\n                        <li>\n                                <p>\n                                    <code>INCLUDE</code> - Only the specified table attributes are\n                                    projected into the index. The list of projected attributes is in\n                                        <code>NonKeyAttributes</code>.</p>\n                            </li>\n                        <li>\n                                <p>\n                                    <code>ALL</code> - All of the table attributes are projected\n                                    into the index.</p>\n                            </li>\n                     </ul>\n                    </li>\n                  <li>\n                        <p>\n                            <code>NonKeyAttributes</code> - A list of one or more non-key attribute\n                            names that are projected into the secondary index. The total count of\n                            attributes provided in <code>NonKeyAttributes</code>, summed across all\n                            of the secondary indexes, must not exceed 100. If you project the same\n                            attribute into two different indexes, this counts as two distinct\n                            attributes when determining the total.</p>\n                    </li>\n               </ul>\n            </li>\n            <li>\n                <p>\n                    <code>IndexSizeBytes</code> - Represents the total size of the index, in bytes.\n                    DynamoDB updates this value approximately every six hours. Recent changes might\n                    not be reflected in this value.</p>\n            </li>\n            <li>\n                <p>\n                    <code>ItemCount</code> - Represents the number of items in the index. DynamoDB\n                    updates this value approximately every six hours. Recent changes might not be\n                    reflected in this value.</p>\n            </li>\n         </ul>\n        <p>If the table is in the <code>DELETING</code> state, no information about indexes will\n            be returned.</p>")),
    GlobalSecondaryIndexDescriptionList.underlyingSchema.optional[TableDescription]("GlobalSecondaryIndexes", _.globalSecondaryIndexes).addHints(smithy.api.Documentation("<p>The global secondary indexes, if any, on the table. Each index is scoped to a given\n            partition key value. Each element is composed of:</p>\n        <ul>\n            <li>\n                <p>\n                    <code>Backfilling</code> - If true, then the index is currently in the\n                    backfilling phase. Backfilling occurs only when a new global secondary index is\n                    added to the table. It is the process by which DynamoDB populates the new index\n                    with data from the table. (This attribute does not appear for indexes that were\n                    created during a <code>CreateTable</code> operation.) </p>\n                <p> You can delete an index that is being created during the\n                        <code>Backfilling</code> phase when <code>IndexStatus</code> is set to\n                    CREATING and <code>Backfilling</code> is true. You can\'t delete the index that\n                    is being created when <code>IndexStatus</code> is set to CREATING and\n                        <code>Backfilling</code> is false. (This attribute does not appear for\n                    indexes that were created during a <code>CreateTable</code> operation.)</p>\n            </li>\n            <li>\n                <p>\n                    <code>IndexName</code> - The name of the global secondary index.</p>\n            </li>\n            <li>\n                <p>\n                    <code>IndexSizeBytes</code> - The total size of the global secondary index, in\n                    bytes. DynamoDB updates this value approximately every six hours. Recent changes\n                    might not be reflected in this value. </p>\n            </li>\n            <li>\n                <p>\n                    <code>IndexStatus</code> - The current status of the global secondary\n                    index:</p>\n                <ul>\n                  <li>\n                        <p>\n                            <code>CREATING</code> - The index is being created.</p>\n                    </li>\n                  <li>\n                        <p>\n                            <code>UPDATING</code> - The index is being updated.</p>\n                    </li>\n                  <li>\n                        <p>\n                            <code>DELETING</code> - The index is being deleted.</p>\n                    </li>\n                  <li>\n                        <p>\n                            <code>ACTIVE</code> - The index is ready for use.</p>\n                    </li>\n               </ul>\n            </li>\n            <li>\n                <p>\n                    <code>ItemCount</code> - The number of items in the global secondary index.\n                    DynamoDB updates this value approximately every six hours. Recent changes might\n                    not be reflected in this value. </p>\n            </li>\n            <li>\n                <p>\n                    <code>KeySchema</code> - Specifies the complete index key schema. The attribute\n                    names in the key schema must be between 1 and 255 characters (inclusive). The\n                    key schema must begin with the same partition key as the table.</p>\n            </li>\n            <li>\n                <p>\n                    <code>Projection</code> - Specifies attributes that are copied (projected) from\n                    the table into the index. These are in addition to the primary key attributes\n                    and index key attributes, which are automatically projected. Each attribute\n                    specification is composed of:</p>\n                <ul>\n                  <li>\n                        <p>\n                            <code>ProjectionType</code> - One of the following:</p>\n                        <ul>\n                        <li>\n                                <p>\n                                    <code>KEYS_ONLY</code> - Only the index and primary keys are\n                                    projected into the index.</p>\n                            </li>\n                        <li>\n                                <p>\n                                    <code>INCLUDE</code> - In addition to the attributes described\n                                    in <code>KEYS_ONLY</code>, the secondary index will include\n                                    other non-key attributes that you specify.</p>\n                            </li>\n                        <li>\n                                <p>\n                                    <code>ALL</code> - All of the table attributes are projected\n                                    into the index.</p>\n                            </li>\n                     </ul>\n                    </li>\n                  <li>\n                        <p>\n                            <code>NonKeyAttributes</code> - A list of one or more non-key attribute\n                            names that are projected into the secondary index. The total count of\n                            attributes provided in <code>NonKeyAttributes</code>, summed across all\n                            of the secondary indexes, must not exceed 100. If you project the same\n                            attribute into two different indexes, this counts as two distinct\n                            attributes when determining the total.</p>\n                    </li>\n               </ul>\n            </li>\n            <li>\n                <p>\n                    <code>ProvisionedThroughput</code> - The provisioned throughput settings for the\n                    global secondary index, consisting of read and write capacity units, along with\n                    data about increases and decreases. </p>\n            </li>\n         </ul>\n        <p>If the table is in the <code>DELETING</code> state, no information about indexes will\n            be returned.</p>")),
    StreamSpecification.schema.optional[TableDescription]("StreamSpecification", _.streamSpecification).addHints(smithy.api.Documentation("<p>The current DynamoDB Streams configuration for the table.</p>")),
    string.optional[TableDescription]("LatestStreamLabel", _.latestStreamLabel).addHints(smithy.api.Documentation("<p>A timestamp, in ISO 8601 format, for this stream.</p>\n\n        <p>Note that <code>LatestStreamLabel</code> is not a unique identifier for the stream,\n            because it is possible that a stream from another table might have the same timestamp.\n            However, the combination of the following three elements is guaranteed to be\n            unique:</p>\n        <ul>\n            <li>\n                <p>Amazon Web Services customer ID</p>\n            </li>\n            <li>\n                <p>Table name</p>\n            </li>\n            <li>\n                <p>\n                  <code>StreamLabel</code>\n               </p>\n            </li>\n         </ul>")),
    StreamArn.schema.optional[TableDescription]("LatestStreamArn", _.latestStreamArn).addHints(smithy.api.Documentation("<p>The Amazon Resource Name (ARN) that uniquely identifies the latest stream for this\n            table.</p>")),
    string.optional[TableDescription]("GlobalTableVersion", _.globalTableVersion).addHints(smithy.api.Documentation("<p>Represents the version of <a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/GlobalTables.html\">global tables</a>\n            in use, if the table is replicated across Amazon Web Services Regions.</p>")),
    ReplicaDescriptionList.underlyingSchema.optional[TableDescription]("Replicas", _.replicas).addHints(smithy.api.Documentation("<p>Represents replicas of the table.</p>")),
    RestoreSummary.schema.optional[TableDescription]("RestoreSummary", _.restoreSummary).addHints(smithy.api.Documentation("<p>Contains details for the restore.</p>")),
    SSEDescription.schema.optional[TableDescription]("SSEDescription", _.sSEDescription).addHints(smithy.api.Documentation("<p>The description of the server-side encryption status on the specified table.</p>")),
    ArchivalSummary.schema.optional[TableDescription]("ArchivalSummary", _.archivalSummary).addHints(smithy.api.Documentation("<p>Contains information about the table archive.</p>")),
    TableClassSummary.schema.optional[TableDescription]("TableClassSummary", _.tableClassSummary).addHints(smithy.api.Documentation("<p>Contains details of the table class.</p>")),
  ){
    TableDescription.apply
  }.withId(id).addHints(hints)
}